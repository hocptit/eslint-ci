import * as dotenv from 'dotenv';
dotenv.config();
export enum EEnvKey {
    NODE_ENV = 'NODE_ENV',
    PORT = 'PORT',
    HOST_ADDRESS = 'HOST_ADDRESS',
    GLOBAL_PREFIX = 'GLOBAL_PREFIX',
    SWAGGER_PATH = 'SWAGGER_PATH',
    SWAGGER_IS_PUBLIC = 'SWAGGER_IS_PUBLIC',
    SWAGGER_HOST = 'SWAGGER_HOST',
    SWAGGER_VERSION = 'SWAGGER_VERSION',
    SWAGGER_TITLE = 'SWAGGER_TITLE',
    SWAGGER_DESC = 'SWAGGER_DESC',
    MONGO_URI = 'MONGO_URI',
    IS_WRITE_LOG = 'IS_WRITE_LOG',
    LOG_LEVEL = 'LOG_LEVEL',

    TOKEN_EXPIRE_TIME = 'TOKEN_EXPIRE_TIME',
    TOKEN_AUTH_KEY = 'TOKEN_AUTH_KEY',
    LOGIN_REDIRECT_URL = 'LOGIN_REDIRECT_URL',
    REGISTER_REDIRECT_URL = 'REGISTER_REDIRECT_URL',
    QUEUE_EXCHANGE = 'QUEUE_EXCHANGE',
    REDIS_DB = 'REDIS_DB',
    RPC = 'RPC',
    NFT_CONTRACT_ADDRESS = 'NFT_CONTRACT_ADDRESS',
    USDC_CONTRACT_ADDRESS = 'USDC_CONTRACT_ADDRESS',
    USDC_DECIMAL = 'USDC_DECIMAL',
    EXCHANGE_CONTRACT_ADDRESS = 'EXCHANGE_CONTRACT_ADDRESS',
    ADMIN_PRIVATE_KEYS = 'ADMIN_PRIVATE_KEYS',
    GAS_LIMIT = 'GAS_LIMIT',

    REDIS_HOST = 'REDIS_HOST',
    REDIS_PASSWORD = 'REDIS_PASSWORD',
    REDIS_PORT = 'REDIS_PORT',
    REDIS_DB_NUMBER = 'REDIS_DB_NUMBER',

    FORTRESS_API_URL = 'FORTRESS_API_URL',
    FORTRESS_AUTH_API_URL = 'FORTRESS_AUTH_API_URL',
    FORTRESS_USERNAME = 'FORTRESS_USERNAME',
    FORTRESS_PASSWORD = 'FORTRESS_PASSWORD',
    FORTRESS_AUDIENCE = 'FORTRESS_AUDIENCE',
    FORTRESS_CLIENT_ID = 'FORTRESS_CLIENT_ID',

    CIRCLE_API_URL = 'CIRCLE_API_URL',
    CIRCLE_API_KEY = 'CIRCLE_API_KEY',
    BACKEND_APIS_DOMAIN = 'BACKEND_APIS_DOMAIN',
    CIRCLE_SOURCE_ID = 'CIRCLE_SOURCE_ID',

    CMC_API_URL = 'CMC_API_URL',
    CMC_API_KEY = 'CMC_API_KEY',

    EXCHANGE_FIRST_BLOCK = 'EXCHANGE_FIRST_BLOCK',
    NFT_FIRST_BLOCK = 'NFT_FIRST_BLOCK',
    SAFE_BLOCK = 'SAFE_BLOCK',
    MATIC_LIMIT = 'MATIC_LIMIT',
    PRIVATE_KEY_FUND_MATIC = 'PRIVATE_KEY_FUND_MATIC',

    MAIL_SMTP_HOST = 'MAIL_SMTP_HOST',
    MAIL_SMTP_PORT = 'MAIL_SMTP_PORT',
    MAIL_SMTP_USER = 'MAIL_SMTP_USER',
    MAIL_SMTP_PASS = 'MAIL_SMTP_PASS',
    MAIL_SMTP_DEFAULT_FROM = 'MAIL_SMTP_DEFAULT_FROM',
    MAIL_SMTP_SECURE = 'MAIL_SMTP_SECURE',

    SLEEP_TIME = 'SLEEP_TIME',
    BLOCK_PER_PROCESS = 'BLOCK_PER_PROCESS',

    // Slack
    IS_WARN_BY_SLACK = 'IS_WARN_BY_SLACK',
    SLACK_TOKEN = 'SLACK_TOKEN',
    SLACK_CHANNEL_ID = 'SLACK_CHANNEL_ID',
    SLACK_USERNAME = 'USERNAME',

    // Payment constant
    PAYMENT_SLEEP_TIME = 'PAYMENT_SLEEP_TIME',
    MAX_NUMBER_RETRY = 'MAX_NUMBER_RETRY',
    FEE_WHEN_WITHDRAW_CIRCLE = 'FEE_WHEN_WITHDRAW_CIRCLE',
}

export const isDevelopmentEnv = () =>
    process.env.NODE_ENV?.toUpperCase() === 'DEVELOPMENT' || process.env.NODE_ENV?.toUpperCase() === 'STAGING';
